const fs = require('fs');
const path = require('path');

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
const { processTurnsFile } = require('./optimize-turns-structure.cjs');
const { processTurnsWithConnections } = require('./create-turn-connections.cjs');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
function createExampleStructure() {
  const example = {
    turn_id: 1,
    id: "turn_14",
    metadata: {
      title: "–†–æ—Å—Å–∏—è, –ù–æ—è–±—Ä—å 2000 ‚Äî –Ø–Ω–≤–∞—Ä—å 2001: –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –í–µ—Ä—Ç–∏–∫–∞–ª–∏",
      date: "2000-11-01",
      period: "–∑–∏–º–∞ 2000-2001",
      summary: "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ ¬´–≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –≤–ª–∞—Å—Ç–∏¬ª –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ —Ä–µ–≥–∏–æ–Ω–∞–º–∏...",
      word_count: 15000,
      sections_count: 10,
      complexity_score: 0.8,
      sentiment_overall: "neutral"
    },
    content: {
      sections: {
        intro: {
          content: "**–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ.** –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –æ—Ç—Ä–∞–∑–∏–ª–∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç—Ç–∞–ø–∞...",
          entities: {
            people: ["–ü—É—Ç–∏–Ω"],
            organizations: ["–ö—Ä–µ–º–ª—å"],
            locations: ["–ú–æ—Å–∫–≤–∞", "–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫"],
            events: [],
            concepts: ["–≤–µ—Ä—Ç–∏–∫–∞–ª—å –≤–ª–∞—Å—Ç–∏", "—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"]
          },
          sentiment: "neutral",
          themes: [
            { theme: "politics", relevance: 0.8 },
            { theme: "society", relevance: 0.6 }
          ],
          chunks: [
            {
              chunk_id: "turn_14_intro_1",
              content: "**–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ.** –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –æ—Ç—Ä–∞–∑–∏–ª–∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç—Ç–∞–ø–∞...",
              tokens_estimate: 500,
              entities: { people: ["–ü—É—Ç–∏–Ω"], organizations: ["–ö—Ä–µ–º–ª—å"] },
              sentiment: "neutral"
            }
          ],
          key_points: [
            "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –≤–ª–∞—Å—Ç–∏",
            "–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç –æ–ª–∏–≥–∞—Ä—Ö–∏–∏ –∫ —É–ø—Ä–∞–≤–ª—è–µ–º–æ–º—É –±–∏–∑–Ω–µ—Å—É"
          ],
          word_count: 2500
        }
      },
      chunks: [],
      key_events: [
        "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –≤–ª–∞—Å—Ç–∏",
        "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ú–æ—Å–∫–≤–∞-2010",
        "–ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å —é–∂–Ω–æ–∫–æ—Ä–µ–π—Å–∫–∏–º–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏"
      ],
      key_decisions: [
        "–£—Å–∏–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ —Ä–µ–≥–∏–æ–Ω–∞–º–∏",
        "–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–µ—Ö–Ω–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–æ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é"
      ]
    },
    indexes: {
      entities: {
        people: ["–ü—É—Ç–∏–Ω", "–î–æ–ª–≥–æ–≤", "–õ–∏—Ç–≤–∏–Ω–æ–≤"],
        organizations: ["–ö—Ä–µ–º–ª—å", "–§–°–ë", "–°–æ–≤–µ—Ç –§–µ–¥–µ—Ä–∞—Ü–∏–∏"],
        locations: ["–ú–æ—Å–∫–≤–∞", "–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫", "–ü—Ä–∏–º–æ—Ä—å–µ"],
        events: ["–ë—É–ª—å–¥–æ–∑–µ—Ä–Ω–∞—è —Ä–µ–≤–æ–ª—é—Ü–∏—è"],
        concepts: ["–≤–µ—Ä—Ç–∏–∫–∞–ª—å –≤–ª–∞—Å—Ç–∏", "—É–ø—Ä–∞–≤–ª—è–µ–º–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"]
      },
      themes: [
        { theme: "politics", relevance: 0.9 },
        { theme: "economy", relevance: 0.7 },
        { theme: "security", relevance: 0.6 }
      ],
      topics: {
        "—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏—è": ["–ø–æ–ª–∏—Ç–∏–∫–∞", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"],
        "—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è": ["—ç–∫–æ–Ω–æ–º–∏–∫–∞", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"],
        "—Å–∏–ª–æ–≤–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞": ["–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–∫–æ–Ω—Ç—Ä–æ–ª—å"]
      }
    },
    connections: {
      previous_turn: "turn_13",
      next_turn: "turn_15",
      related_turns: ["turn_12", "turn_16"],
      continuity_flags: {
        ongoing_crisis: ["–¥–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"],
        new_developments: ["–ø–æ–∑–∏—Ü–∏—è –°–®–ê", "–∫–∞–≤–∫–∞–∑—Å–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è"],
        resolved_issues: []
      }
    },
    analysis: {
      sentiment: "neutral",
      complexity: "high",
      key_themes: ["politics", "economy", "security"],
      risk_factors: [
        "–Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞ –ö–∞–≤–∫–∞–∑–µ",
        "–∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–º–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏"
      ],
      opportunities: [
        "—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ä–æ—Å—Ç",
        "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è"
      ]
    }
  };

  return example;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
function validateStructure(turn) {
  const errors = [];
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
  const requiredFields = ['turn_id', 'id', 'metadata', 'content', 'indexes', 'analysis'];
  requiredFields.forEach(field => {
    if (!turn[field]) {
      errors.push(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: ${field}`);
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
  if (turn.metadata) {
    const requiredMetadata = ['title', 'date', 'summary'];
    requiredMetadata.forEach(field => {
      if (!turn.metadata[field]) {
        errors.push(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –≤ metadata: ${field}`);
      }
    });
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
  if (turn.indexes) {
    const requiredIndexes = ['entities', 'themes'];
    requiredIndexes.forEach(field => {
      if (!turn.indexes[field]) {
        errors.push(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –≤ indexes: ${field}`);
      }
    });
  }
  
  return errors;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ –∫–∞—á–µ—Å—Ç–≤–µ
function createQualityReport(turns) {
  const report = {
    total_turns: turns.length,
    validation_errors: 0,
    average_word_count: 0,
    average_sections: 0,
    sentiment_distribution: {},
    theme_distribution: {},
    entity_coverage: {},
    processing_date: new Date().toISOString()
  };
  
  let totalWords = 0;
  let totalSections = 0;
  let errors = 0;
  
  turns.forEach(turn => {
    // –ü–æ–¥—Å—á–µ—Ç –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    const validationErrors = validateStructure(turn);
    errors += validationErrors.length;
    
    // –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    totalWords += turn.metadata?.word_count || 0;
    totalSections += turn.metadata?.sections_count || 0;
    
    // –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
    const sentiment = turn.analysis?.sentiment || 'unknown';
    report.sentiment_distribution[sentiment] = (report.sentiment_distribution[sentiment] || 0) + 1;
    
    // –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–º
    turn.indexes?.themes?.forEach(theme => {
      report.theme_distribution[theme.theme] = (report.theme_distribution[theme.theme] || 0) + 1;
    });
    
    // –ü–æ–∫—Ä—ã—Ç–∏–µ —Å—É—â–Ω–æ—Å—Ç–µ–π
    Object.keys(turn.indexes?.entities || {}).forEach(entityType => {
      const count = turn.indexes.entities[entityType].length;
      report.entity_coverage[entityType] = (report.entity_coverage[entityType] || 0) + count;
    });
  });
  
  report.validation_errors = errors;
  report.average_word_count = Math.round(totalWords / turns.length);
  report.average_sections = Math.round(totalSections / turns.length);
  
  return report;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞
async function processTurnsPipeline(inputPath, outputDir = './processed') {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ö–æ–¥–æ–≤...');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }
  
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const baseOutputPath = path.join(outputDir, `turns_processed_${timestamp}`);
  
  try {
    // –®–∞–≥ 1: –ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    console.log('\nüìã –®–∞–≥ 1: –ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
    const optimizedPath = `${baseOutputPath}_optimized.jsonl`;
    const step1Result = processTurnsFile(inputPath, optimizedPath);
    
    console.log(`‚úÖ –®–∞–≥ 1 –∑–∞–≤–µ—Ä—à–µ–Ω: ${step1Result.processedCount} —Ö–æ–¥–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ`);
    
    // –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–µ–π –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
    console.log('\nüîó –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ö–æ–¥–∞–º–∏...');
    const finalPath = `${baseOutputPath}_final.json`;
    const step2Result = processTurnsWithConnections(optimizedPath, finalPath);
    
    console.log(`‚úÖ –®–∞–≥ 2 –∑–∞–≤–µ—Ä—à–µ–Ω: ${step2Result.turnsCount} —Ö–æ–¥–æ–≤ —Å —Å–≤—è–∑—è–º–∏`);
    
    // –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –∫–∞—á–µ—Å—Ç–≤–µ
    console.log('\nüìä –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –∫–∞—á–µ—Å—Ç–≤–µ...');
    const finalContent = fs.readFileSync(finalPath, 'utf8');
    const finalData = JSON.parse(finalContent);
    const qualityReport = createQualityReport(finalData.turns);
    
    const reportPath = `${baseOutputPath}_quality_report.json`;
    fs.writeFileSync(reportPath, JSON.stringify(qualityReport, null, 2), 'utf8');
    
    console.log(`‚úÖ –®–∞–≥ 3 –∑–∞–≤–µ—Ä—à–µ–Ω: –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${reportPath}`);
    
    // –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    console.log('\nüìù –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
    const exampleStructure = createExampleStructure();
    const examplePath = `${baseOutputPath}_example.json`;
    fs.writeFileSync(examplePath, JSON.stringify(exampleStructure, null, 2), 'utf8');
    
    console.log(`‚úÖ –®–∞–≥ 4 –∑–∞–≤–µ—Ä—à–µ–Ω: –ø—Ä–∏–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${examplePath}`);
    
    // –°–æ–∑–¥–∞–Ω–∏–µ README —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    console.log('\nüìñ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...');
    const readmeContent = createReadmeDocumentation();
    const readmePath = `${baseOutputPath}_README.md`;
    fs.writeFileSync(readmePath, readmeContent, 'utf8');
    
    console.log(`‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ ${readmePath}`);
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéâ –ü–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
    console.log(`   ‚Ä¢ ${optimizedPath} - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö–æ–¥—ã`);
    console.log(`   ‚Ä¢ ${finalPath} - –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å —Å–≤—è–∑—è–º–∏`);
    console.log(`   ‚Ä¢ ${step2Result.timelinePath} - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏`);
    console.log(`   ‚Ä¢ ${step2Result.searchIndexPath} - –ü–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å`);
    console.log(`   ‚Ä¢ ${reportPath} - –û—Ç—á–µ—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ`);
    console.log(`   ‚Ä¢ ${examplePath} - –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã`);
    console.log(`   ‚Ä¢ ${readmePath} - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è`);
    
    return {
      success: true,
      files: {
        optimized: optimizedPath,
        final: finalPath,
        timeline: step2Result.timelinePath,
        searchIndex: step2Result.searchIndexPath,
        qualityReport: reportPath,
        example: examplePath,
        readme: readmePath
      },
      stats: {
        totalTurns: step2Result.turnsCount,
        qualityReport: qualityReport
      }
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
function createReadmeDocumentation() {
  return `# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ö–æ–¥–æ–≤ –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏

## –û–±–∑–æ—Ä

–≠—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é.

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤

### 1. –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
- \`turns_processed_*_final.json\` - –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
- \`turns_processed_*_optimized.jsonl\` - –ë–∞–∑–æ–≤—ã–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö–æ–¥—ã
- \`turns_processed_*_example.json\` - –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–¥–Ω–æ–≥–æ —Ö–æ–¥–∞

### 2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
- \`turns_processed_*_timeline.json\` - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π
- \`turns_processed_*_search_index.json\` - –ü–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
- \`turns_processed_*_quality_report.json\` - –û—Ç—á–µ—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ö–æ–¥–∞

### –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
\`\`\`json
{
  "metadata": {
    "title": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ö–æ–¥–∞",
    "date": "2000-11-01",
    "period": "–∑–∏–º–∞ 2000-2001",
    "summary": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
    "word_count": 15000,
    "sections_count": 10,
    "complexity_score": 0.8,
    "sentiment_overall": "neutral"
  }
}
\`\`\`

### –ö–æ–Ω—Ç–µ–Ω—Ç
\`\`\`json
{
  "content": {
    "sections": {
      "intro": {
        "content": "–¢–µ–∫—Å—Ç —Å–µ–∫—Ü–∏–∏",
        "entities": { "people": [], "organizations": [] },
        "sentiment": "neutral",
        "themes": [{ "theme": "politics", "relevance": 0.8 }],
        "chunks": [{ "chunk_id": "id", "content": "—á–∞–Ω–∫", "tokens_estimate": 500 }],
        "key_points": ["–∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã"]
      }
    },
    "chunks": [],
    "key_events": [],
    "key_decisions": []
  }
}
\`\`\`

### –ò–Ω–¥–µ–∫—Å—ã
\`\`\`json
{
  "indexes": {
    "entities": {
      "people": ["–ü—É—Ç–∏–Ω", "–î–æ–ª–≥–æ–≤"],
      "organizations": ["–ö—Ä–µ–º–ª—å", "–§–°–ë"],
      "locations": ["–ú–æ—Å–∫–≤–∞", "–ü–µ—Ç–µ—Ä–±—É—Ä–≥"],
      "events": [],
      "concepts": ["–≤–µ—Ä—Ç–∏–∫–∞–ª—å –≤–ª–∞—Å—Ç–∏"]
    },
    "themes": [{ "theme": "politics", "relevance": 0.9 }]
  }
}
\`\`\`

### –°–≤—è–∑–∏
\`\`\`json
{
  "connections": {
    "previous_turn": "turn_13",
    "next_turn": "turn_15",
    "related_turns": ["turn_12", "turn_16"],
    "continuity_flags": {
      "ongoing_crisis": [],
      "new_developments": [],
      "resolved_issues": []
    }
  }
}
\`\`\`

### –ê–Ω–∞–ª–∏–∑
\`\`\`json
{
  "analysis": {
    "sentiment": "neutral",
    "complexity": "high",
    "key_themes": ["politics", "economy"],
    "risk_factors": [],
    "opportunities": []
  }
}
\`\`\`

## –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏

### 1. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
- –ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ–∫—Ü–∏–∏ –∏ —á–∞–Ω–∫–∏
- –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏ —Ç–µ–º—ã
- –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è

### 2. –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫
- –ò–Ω–¥–µ–∫—Å—ã –ø–æ —Å—É—â–Ω–æ—Å—Ç—è–º, —Ç–µ–º–∞–º, –¥–∞—Ç–∞–º
- –°–≤—è–∑–∏ –º–µ–∂–¥—É —Ö–æ–¥–∞–º–∏
- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏

### 3. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞–Ω–∫–∏
- –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–æ–≤ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –æ–∫–Ω–æ
- –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ –º–µ–∂–¥—É —á–∞–Ω–∫–∞–º–∏
- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞–Ω–∫–∞

### 4. –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤—è–∑–∏
- –ü—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏
- –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
- –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

### –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
\`\`\`javascript
const data = JSON.parse(fs.readFileSync('turns_final.json', 'utf8'));
const turns = data.turns;
const timeline = data.timeline;
const searchIndex = data.search_index;
\`\`\`

### –ü–æ–∏—Å–∫ –ø–æ —Å—É—â–Ω–æ—Å—Ç—è–º
\`\`\`javascript
const putinTurns = searchIndex.by_entity['–ü—É—Ç–∏–Ω'];
\`\`\`

### –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–º–∞–º
\`\`\`javascript
const politicsTurns = searchIndex.by_theme['politics'];
\`\`\`

### –í—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è
\`\`\`javascript
const putinTimeline = timeline.characters['–ü—É—Ç–∏–Ω'];
\`\`\`

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é

1. **–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –æ–∫–Ω–æ**: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∞–Ω–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–º 1000-2000 —Ç–æ–∫–µ–Ω–æ–≤
2. **–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è**: –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ relevance –≤ —Ç–µ–º–∞—Ö –∏ —Å—É—â–Ω–æ—Å—Ç—è—Ö
3. **–°–≤—è–∑–∏**: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ connections –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
4. **–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏**: –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ–±—ã—Ç–∏–π –≤–æ –≤—Ä–µ–º–µ–Ω–∏
5. **–ê–Ω–∞–ª–∏–∑**: –£—á–∏—Ç—ã–≤–∞–π—Ç–µ sentiment –∏ complexity –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏

## –í–µ—Ä—Å–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

- **v1.0**: –ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º —Å—É—â–Ω–æ—Å—Ç–µ–π
- **v2.0**: –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ö–æ–¥–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏
- **v2.1**: –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –∏ –∞–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞
`;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
module.exports = {
  processTurnsPipeline,
  validateStructure,
  createQualityReport,
  createExampleStructure
};

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const inputPath = process.argv[2] || 'd:/Downloads/turns_hierarchical.jsonl';
  const outputDir = process.argv[3] || './processed';
  
  if (!fs.existsSync(inputPath)) {
    console.error(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${inputPath}`);
    console.log('\nüí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
    console.log('   node process-turns-pipeline.js <input_file> [output_directory]');
    console.log('\nüìù –ü—Ä–∏–º–µ—Ä:');
    console.log('   node process-turns-pipeline.js d:/Downloads/turns_hierarchical.jsonl ./processed');
    process.exit(1);
  }
  
  processTurnsPipeline(inputPath, outputDir)
    .then(result => {
      if (result.success) {
        console.log('\n‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        process.exit(0);
      } else {
        console.error('\n‚ùå –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', result.error);
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message);
      process.exit(1);
    });
} 