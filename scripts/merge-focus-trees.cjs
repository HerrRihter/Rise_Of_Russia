const fs = require('fs');
const path = require('path');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const existingFocusTreePath = path.join(__dirname, '..', 'public', 'history', 'focus_tree_nodes.json');
const presidentialFocusTreePath = path.join(__dirname, 'presidential_focus_tree.json');
const mergedOutputPath = path.join(__dirname, '..', 'public', 'history', 'focus_tree_nodes_merged.json');
const backupPath = path.join(__dirname, '..', 'public', 'history', 'focus_tree_nodes_backup.json');

// –ß—Ç–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –¥—Ä–µ–≤–∞ —Ñ–æ–∫—É—Å–æ–≤
const existingFocusTree = JSON.parse(fs.readFileSync(existingFocusTreePath, 'utf-8'));

// –ß—Ç–µ–Ω–∏–µ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–æ–≥–æ –¥—Ä–µ–≤–∞ —Ñ–æ–∫—É—Å–æ–≤
const presidentialFocusTree = JSON.parse(fs.readFileSync(presidentialFocusTreePath, 'utf-8'));

// –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
fs.writeFileSync(backupPath, JSON.stringify(existingFocusTree, null, 2), 'utf-8');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ñ–æ–∫—É—Å–æ–≤
function mergeFocusTrees() {
  const mergedFocusTree = {
    focus_tree_nodes: []
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–æ–∫—É—Å—ã
  existingFocusTree.focus_tree_nodes.forEach(focus => {
    mergedFocusTree.focus_tree_nodes.push({
      ...focus,
      category: 'economic_reforms' // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
    });
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–µ —Ñ–æ–∫—É—Å—ã
  presidentialFocusTree.focus_tree_nodes.forEach(focus => {
    mergedFocusTree.focus_tree_nodes.push({
      ...focus,
      category: 'presidential_decisions' // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
    });
  });
  
  return mergedFocusTree;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ–± –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏
function createMergeReport(existingCount, presidentialCount, mergedCount) {
  const report = `# –û—Ç—á–µ—Ç –æ–± –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ –¥—Ä–µ–≤–∞ —Ñ–æ–∫—É—Å–æ–≤

## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è

- **–°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–æ–∫—É—Å–æ–≤**: ${existingCount}
- **–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏—Ö —Ñ–æ–∫—É—Å–æ–≤**: ${presidentialCount}
- **–í—Å–µ–≥–æ –ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è**: ${mergedCount}

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –¥—Ä–µ–≤–∞

### –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ä–µ—Ñ–æ—Ä–º—ã (${existingCount} —Ñ–æ–∫—É—Å–æ–≤)
- –õ–∏–±–µ—Ä–∞–ª–∏–∑–∞—Ü–∏—è
- –ù–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è  
- –ù–∞—á–∞–ª–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Ñ–æ—Ä–º

### –†–µ—à–µ–Ω–∏—è –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ (${presidentialCount} —Ñ–æ–∫—É—Å–æ–≤)
- –õ–∏—á–Ω—ã–π –ö–æ–Ω—Ç—Ä–æ–ª—å –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ (–•–æ–¥ 13)
- –ö–æ–Ω—Å–µ—Ä–≤–∞—Ü–∏—è –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–≥–æ –ë–∞–ª–∞–Ω—Å–∞ –°–∏–ª (–•–æ–¥ 14)
- –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –ò–Ω–µ—Ä—Ü–∏–∏ (–•–æ–¥ 15)
- –†–µ–∂–∏–º –û–∂–∏–¥–∞–Ω–∏—è (–•–æ–¥ 16)
- –£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –í–Ω–µ—à–Ω–µ–≥–æ –ü–µ—Ä–∏–º–µ—Ç—Ä–∞ (–•–æ–¥ 17)
- –¢–æ—Ç–∞–ª—å–Ω–∞—è –ú–æ–±–∏–ª–∏–∑–∞—Ü–∏—è (–•–æ–¥ 18)
- –ì–æ—Å–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ü—Ä–æ–µ–∫—Ç—ã (–•–æ–¥ 19)
- –§–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è '–°—É–≤–µ—Ä–µ–Ω–Ω–æ–π –î–µ–º–æ–∫—Ä–∞—Ç–∏–∏' (–•–æ–¥ 20)
- –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ (–•–æ–¥ 21)
- –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ (–•–æ–¥ 22)
- –£–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –í—ã–±–æ—Ä—ã (–•–æ–¥ 23)

## –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ñ–æ–∫—É—Å–æ–≤

### –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ä–µ—Ñ–æ—Ä–º—ã
- start_economic_reforms: (1.5, 0)
- liberalization: (2.5, 1)
- nationalisation: (0.5, 1)

### –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è
- turn_13_personal_control: (-4, 0)
- turn_14_balance_conservation: (-3, 0)
- turn_15_inertia_maintenance: (-2, 0)
- turn_16_waiting_mode: (-1, 0)
- turn_17_external_perimeter: (0, 0)
- turn_18_total_mobilization: (1, 0)
- turn_19_national_projects: (2, 0)
- turn_20_sovereign_democracy: (3, 0)
- turn_21_mobilization_course: (4, 0)
- turn_22_national_building: (5, 0)
- turn_23_presidential_control: (6, 0)

## –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è

–°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: \`focus_tree_nodes_backup.json\`

---
*–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${new Date().toISOString()}*
`;

  return report;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üîÑ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥—Ä–µ–≤–∞ —Ñ–æ–∫—É—Å–æ–≤...');
  
  const mergedFocusTree = mergeFocusTrees();
  const existingCount = existingFocusTree.focus_tree_nodes.length;
  const presidentialCount = presidentialFocusTree.focus_tree_nodes.length;
  const mergedCount = mergedFocusTree.focus_tree_nodes.length;
  
  // –ó–∞–ø–∏—Å—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  fs.writeFileSync(mergedOutputPath, JSON.stringify(mergedFocusTree, null, 2), 'utf-8');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
  const report = createMergeReport(existingCount, presidentialCount, mergedCount);
  const reportPath = path.join(__dirname, 'merge_focus_trees_report.md');
  fs.writeFileSync(reportPath, report, 'utf-8');
  
  console.log(`‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
  console.log(`üìÅ –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${mergedOutputPath}`);
  console.log(`üìÑ –û—Ç—á–µ—Ç: ${reportPath}`);
  console.log(`üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: ${backupPath}`);
  
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`   - –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–æ–∫—É—Å–æ–≤: ${existingCount}`);
  console.log(`   - –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏—Ö —Ñ–æ–∫—É—Å–æ–≤: ${presidentialCount}`);
  console.log(`   - –í—Å–µ–≥–æ –ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è: ${mergedCount}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
  const coordinates = mergedFocusTree.focus_tree_nodes.map(focus => ({id: focus.id, x: focus.x, y: focus.y}));
  const duplicateCoords = coordinates.filter((coord, index) => 
    coordinates.findIndex(c => c.x === coord.x && c.y === coord.y) !== index
  );
  
  if (duplicateCoords.length > 0) {
    console.log(`‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:`);
    duplicateCoords.forEach(coord => {
      console.log(`   - ${coord.id}: (${coord.x}, ${coord.y})`);
    });
  } else {
    console.log(`‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
  }
}

// –ó–∞–ø—É—Å–∫
main(); 