const admin = require('firebase-admin');
const fs = require('fs');
const path = require('path');
const { getFirestore, collection, getDocs, writeBatch, doc, setDoc } = require('firebase-admin/firestore');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const serviceAccount = require('../serviceAccountKey.json');
const focusTreeFile = path.join(__dirname, 'presidential_focus_tree.json');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Admin
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = getFirestore();

async function uploadFocusTree() {
  try {
    // console.log('üå≥ –ó–∞–≥—Ä—É–∑–∫–∞ –¥—Ä–µ–≤–∞ —Ñ–æ–∫—É—Å–æ–≤ –≤ Firestore...');
    const focusTreeFilePath = path.join(__dirname, '..', 'public', 'history', 'focus_tree_nodes.json');
    const focusTreeFileContent = await fs.readFile(focusTreeFilePath, 'utf8');
    const focusNodes = JSON.parse(focusTreeFileContent);
    // console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ñ–æ–∫—É—Å–æ–≤: ${focusNodes.length}`);
    const focusTreeCollection = collection(db, 'focus_tree_nodes');
    const existingDocs = await getDocs(focusTreeCollection);
    if (!existingDocs.empty) {
      // console.log(`üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ ${existingDocs.size} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...`);
      const batch = writeBatch(db);
      existingDocs.forEach(doc => batch.delete(doc.ref));
      await batch.commit();
    }
    // console.log('üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ–∫—É—Å–æ–≤ –≤ Firestore...');
    const batch = writeBatch(db);
    focusNodes.forEach(focus => {
      const docId = focus.id;
      const docRef = doc(focusTreeCollection, docId);
      batch.set(docRef, focus);
      // console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–æ–∫—É—Å: ${focus.title} (${docId})`);
    });
    await batch.commit();
    // console.log(`üéâ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${focusNodes.length} —Ñ–æ–∫—É—Å–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é 'focus_tree_nodes'`);
    const metadataDocRef = doc(db, 'national_focus_data', 'metadata');
    const metadata = {
      total_count: focusNodes.length,
      last_updated: new Date().toISOString(),
    };
    await setDoc(metadataDocRef, metadata, { merge: true });
    // console.log('üìã –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥—Ä–µ–≤–∞ —Ñ–æ–∫—É—Å–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    // console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥—Ä–µ–≤–∞ —Ñ–æ–∫—É—Å–æ–≤:', error);
    process.exit(1);
  }
  
  process.exit(0);
}

// –ó–∞–ø—É—Å–∫
uploadFocusTree(); 