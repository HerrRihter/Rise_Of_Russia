const admin = require('firebase-admin');
const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∫–ª—é—á—É (–≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)
const serviceAccount = require('../serviceAccountKey.json');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function uploadConstitutionalPrinciples() {
  try {
    console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –≤ Firestore...');
    const principlesPath = path.join(process.cwd(), 'public', 'history', 'constitutional_principles.json');
    const principlesData = JSON.parse(fs.readFileSync(principlesPath, 'utf8'));
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${principlesData.principles.length} –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏`);
    for (const principle of principlesData.principles) {
      await db.collection('constitutional_principles').doc(principle.id).set(principle);
      console.log(`‚úì –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–∏–Ω—Ü–∏–ø: ${principle.name} (${principle.options.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)`);
    }
    console.log('\n‚úÖ –í—Å–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ Firestore!');
    const totalOptions = principlesData.principles.reduce((sum, principle) => sum + principle.options.length, 0);
    console.log(`üìã –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: ${totalOptions}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤:', error);
    process.exit(1);
  }
}

uploadConstitutionalPrinciples(); 